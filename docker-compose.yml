version: '3.8'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:19092

      # Three listeners: INTERNAL, EXTERNAL, and CONTROLLER.
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

      # Advertise different addresses for internal vs external usage:
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092,CONTROLLER://kafka:19092

      - ALLOW_PLAINTEXT_LISTENER=yes

    ports:
      - "9092:9092"    # Map internal broker port to your host (useful if you want to see logs or test)
      - "29092:29092"  # External listener for host-based clients
      - "19092:19092"  # Controller (usually only used internally)
    networks:
      - my_kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      # Kafka UI runs in Docker -> use the *internal* listener
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      # Optionally disable JMX or set a real JMX port
      - KAFKA_CLUSTERS_0_METRICS_PORT=  # blank so it won't try JMX
    ports:
      - "8080:8080"
    networks:
      - my_kafka_network

networks:
  my_kafka_network:
    driver: bridge
